#!/bin/bash
#
# TACAACS+ login program
#
source /usr/local/bin/writelog
source /usr/local/bin/passwdmgmt
source /usr/local/bin/configmgmt

SSH_SOURCE=$(echo $SSH_CONNECTION | awk '{print $1}')
PORTEX_TS_CONF="/home/portex/portex_ts.conf"

declare -A PORTEX_CONF
CONFIG_READ $PORTEX_TS_CONF TAC_
CONFIG_READ $PORTEX_TS_CONF LOG_

declare -x TAC_ENABLE=${PORTEX_CONF[TAC_ENABLE]}
declare -x TAC_SERVER_FLAG=""
declare -a ERROR_ACCT

#
# Check if TACACS+ login is enable
if [ ${PORTEX_CONF[TAC_ENABLE]} == "ON" ]; then
	TAC_CLIENT="/usr/local/bin/tacacs_client"
	echo ""

	#
	# Check TACACS+ server status
	#
	/bin/nc -vz -w 3 ${PORTEX_CONF[TAC_SERVER1_IP]} 49 &>/dev/null 2>&1
	if [ $? -eq 0 ]; then
		TAC_SERVER_FLAG="TAC_SERVER1"
		export TAC_SERVER=${PORTEX_CONF[TAC_SERVER1_IP]}
		export TAC_KEY=${PORTEX_CONF[TAC_SERVER1_KEY]}
	else
		echo "Connect TACACS+ server1 unsuccessfully"
		/bin/nc -vz -w 3 ${PORTEX_CONF[TAC_SERVER2_IP]} 49 &>/dev/null 2>&1
		if [ $? -eq 0 ]; then
			echo "Connect TACACS+ server2 successfully"
			TAC_SERVER_FLAG="TAC_SERVER2"
			export TAC_SERVER=${PORTEX_CONF[TAC_SERVER2_IP]}
			export TAC_KEY=${PORTEX_CONF[TAC_SERVER2_KEY]}
		else
			echo "Connect TACACS+ Server2 unsuccessfully"
		fi
	fi

	#
	# If one of TACACS+ server is available, then use TACACS+ AAA
	#
	TRY_COUNT=0
	while [ $TAC_SERVER_FLAG ]; do
		TAC_USERID=""
		TAC_USERPASS=""
		while [ ! $TAC_USERID ]; do
			read -p "$HOSTNAME (TACACS+) login: " TAC_USERID
		done
		while [ ! $TAC_USERPASS ]; do
			read -sp "$HOSTNAME login password: " TAC_USERPASS
			echo ""
		done
		#
		# Check username/password from TACACS+ server
		#
		declare -a CHECK=$($TAC_CLIENT -u $TAC_USERID -H $TAC_SERVER -k $TAC_KEY -v authenticate --password $TAC_USERPASS 2>/dev/null)
		declare -a RESULT=$(echo $CHECK | awk '{print $2}')
		echo ""
		if [[ $RESULT == "PASS" ]]; then
			export PORTEX_USERID=$TAC_USERID
			declare -a AAA_GROUP=$($TAC_CLIENT -u $TAC_USERID -H $TAC_SERVER -k $TAC_KEY -v authorize -c service=portex-tacmenu cmd=tacmenu | egrep "av-pairs:" -A 3 | awk -F^ '{print $2}' | egrep tacmenu 2>/dev/null)
			case $AAA_GROUP in
			tacmenusu*)
				[ ${PORTEX_CONF[LOG_ENABLE]} == "ON" ] && write_log_buffer auth info LOGIN "Administrator $TAC_USERID login successfully from $SSH_SOURCE by TACACS+ server $TAC_SERVER authentication."
				/usr/local/bin/tacmenusu
				exit 0
				;;
			tacmenuop*)
				[ ${PORTEX_CONF[LOG_ENABLE]} == "ON" ] && write_log_buffer auth info LOGIN "Operator $TAC_USERID login successfully from $SSH_SOURCE by TACACS+ server $TAC_SERVER authentication."
				/usr/local/bin/tacmenuop
				exit 0
				;;
			*)
				echo "No matched authorization group"
				exit 1
				;;
			esac
			exit 0
		else
			ERROR_ACCT[$TRY_COUNT]=$TAC_USERID
			TRY_COUNT=$((TRY_COUNT + 1))
			if [ $TRY_COUNT -le 2 ]; then
				write_log_buffer auth info LOGIN "TACACS+ auth. login failed $TRY_COUNT times from IP:$SSH_SOURCE, attempt account:$TAC_USERID" >/dev/null 2>&1
				echo "Incorrect TACACS+ username or password, try again"
				echo ""
			else
				echo ""
				ERROR_ACCT_LIST=$(echo ${ERROR_ACCT[@]})
				write_log_buffer auth info LOGIN "TACACS+ auth. login failed $TRY_COUNT times from IP:$SSH_SOURCE, attempt account:$TAC_USERID" >/dev/null 2>&1
				echo "Login failed."
				exit 1
			fi
		fi
	done
fi

#
# Check username/password from local account
#
if [ ${PORTEX_CONF[TAC_ENABLE]} == "OFF" ]; then
	clear
	echo ""
	echo "TACACS+ AAA disable; please login use local username/password"
else
	echo ""
	echo "All TACACS+ servers are unavailable; please use local username/password."
fi
echo ""
#
# Check username/password from local account
TRY_COUNT=0
while [ TRUE ]; do
	LOCAL_USERID=""
	LOCAL_USERPASS=""

	while [ ! $LOCAL_USERID ]; do
		read -p "$HOSTNAME (LOCAL) login: " LOCAL_USERID
	done

	while [ ! $LOCAL_USERPASS ]; do
		read -sp "$HOSTNAME login password: " LOCAL_USERPASS
		echo ""
	done
	echo ""
	cat $PORTEX_TS_CONF | egrep -v '#' | egrep "^$LOCAL_USERID:localuser:" >/dev/null 2>&1
	if [ $? -eq 0 ]; then
		LOCAL_ACCT_NAME=$(cat $PORTEX_TS_CONF | egrep -v '#' | egrep "^$LOCAL_USERID:localuser:" | awk -F: '{print $1}')
		LOCAL_ACCT_PRIVILEGE=$(cat $PORTEX_TS_CONF | egrep -v '#' | egrep "^$LOCAL_USERID:localuser:" | awk -F: '{print $3}')
		LOCAL_ACCT_CRYPT=$(cat $PORTEX_TS_CONF | egrep -v '#' | egrep "^$LOCAL_USERID:localuser:" | awk -F: '{print $4}')
		PASS_CHECK -c $LOCAL_USERPASS:$LOCAL_ACCT_CRYPT
		if [ $? -eq 0 ]; then
			export PORTEX_USERID=$LOCAL_ACCT_NAME
			case $LOCAL_ACCT_PRIVILEGE in
			admin)
				write_log_buffer auth info LOGIN "Administrator $LOCAL_USERID login successfully from $SSH_SOURCE by local password authentication."
				/usr/local/bin/tacmenusu
				exit 0
				;;
			op)
				write_log_buffer auth info LOGIN "Operator $LOCAL_USERID login successfully from $SSH_SOURCE by local password authentication."
				/usr/local/bin/tacmenuop
				exit 0
				;;
			*)
				echo "No privilege group matched."
				exit 1
				;;
			esac
		else
			ERROR_ACCT[$TRY_COUNT]=$LOCAL_USERID
			TRY_COUNT=$((TRY_COUNT + 1))
			if [ $TRY_COUNT -le 2 ]; then
				write_log_buffer auth info LOGIN "Local auth. login failed $TRY_COUNT times from IP:$SSH_SOURCE, attempt account:$LOCAL_USERID" >/dev/null 2>&1
				echo "Local username/password is NOT correct; try again."
				echo ""
			else
				echo ""
				ERROR_ACCT_LIST=$(echo ${ERROR_ACCT[@]})
				write_log_buffer auth info LOGIN "Local auth. login failed $TRY_COUNT times from IP:$SSH_SOURCE, attempt account:$LOCAL_USERID" >/dev/null 2>&1
				echo "Login failed."
				exit 1
			fi
		fi
	else
		ERROR_ACCT[$TRY_COUNT]=$LOCAL_USERID
		TRY_COUNT=$((TRY_COUNT + 1))
		if [ $TRY_COUNT -le 2 ]; then
			write_log_buffer auth info LOGIN "Local auth. login failed $TRY_COUNT times from IP:$SSH_SOURCE, attempt account:$LOCAL_USERID" >/dev/null 2>&1
			echo "Local username/password is NOT correct; try again."
			echo ""
		else
			echo ""
			ERROR_ACCT_LIST=$(echo ${ERROR_ACCT[@]})
			write_log_buffer auth info LOGIN "Local auth. login failed $TRY_COUNT times from IP:$SSH_SOURCE, attempt account:$LOCAL_USERID" >/dev/null 2>&1
			echo "Login failed."
			exit 1
		fi
	fi
done
